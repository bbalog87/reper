#!/bin/bash


## input
READS1=''
READS2=''
COVERAGE='10'
READLENGTH=100  #average read length - used for calculating genomic part of repeats in last step

## performance options
MAXTHREADS=2
MAXMEMORY='4G'


## reper installation directories
reperDir="/reper"
scrDir="$reperDir/scripts"
depDir="/dependencies"
dbDir="./databases"

## paths to executables
jellyfish="$depDir/jellyfish-2.2.6/bin/jellyfish"
trinity="$depDir/trinityrnaseq-Trinity-v2.4.0/Trinity"
cdHit="$depDir/cd-hit-v4.6.7-2017-0501/cd-hit-est"
bowtieBuild="$depDir/bowtie2-2.3.2/bowtie2-build"
bowtie2="$depDir/bowtie2-2.3.2/bowtie2"
samtools="$depDir/samtools-1.4.1/samtools"
makeblastdb="$depDir/ncbi-blast-2.2.28+/bin/makeblastdb"
blastn="$depDir/ncbi-blast-2.2.28+/bin/blastn"
KmerFilter="$depDir/kmer-scripts/bin/kmer-filter"

## databases
classificationDB="$dbDir/REdat/mipsREdat_9.3p_ALL.fasta"
chloroDB="$dbDir/refseq/refseq-chloro.fa"
mitoDB="$dbDir/refseq/refseq-mito.fa"


## step specific options
LOGFILE='reper.log'
# Jellyfish
KMERSIZE=31
JELLYOUT='reads.jf'
# Kmer Filter
CUTOFF=$(($COVERAGE*5))
FILTEROUT='reads.filtered'
# Trinity
TRINITYOUT='Trinity.fasta'
# cd-hit
#alignment parameters are set in run_cd-hit.sh
CLUSTEROUT=$TRINITYOUT".exemplars"
# classifier
CLASSIFYOUT=$CLUSTEROUT".classified"
# quantify
QUANTOUT='alignments-sorted.bam'
# filtering
# CHLO='/shelf/genomics/projects/dmuscipula/chloroplast/chloro_gene_database/eudicot/all_CDS.fa'  #general sequences as default - change for species specific data
# MITO='/storage/genomics/projects/dmuscipula/mitochondrion/references/genomes/streptophyta_mitoDB.fasta'
FILCHLOOUT=$CLUSTEROUT"_vs_chloro.bls"
FILMITOOUT=$CLUSTEROUT"_vs_mito.bls"



maxMemoryKB=$(echo "$MAXMEMORY" | perl -ne '($num,$suf)=$_=~/(\d+)(K|M|G|T)?/; if($suf eq "T"){$res=$num*1024*1024*1024}elsif($suf eq "G"){$res=$num*1024*1024}elsif($suf eq "M"){$res=$num*1024}elsif($suf eq "K"){$res=$num}else{die "ERROR: could not confert the memory limit to KB\nPlease make sure it is a format like 5M or 10G"} print "$res"')

