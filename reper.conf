#!/bin/bash


## input
READS1=''
READS2=''
COVERAGE=''
READLENGTH=100  #average read length - used for calculating genomic part of repeats in last step

## output
OUTDIR='.'

## performance options
MAXTHREADS=32
MAXMEMORY='180G'




reperDir="/reper"
depDir="$reperDir/dependencies"
dbDir="$reperDir/databases"

## paths to executables
jellyfish="$depDir/jellyfish-2.2.6/bin/jellyfish"
trinity="$depDir/trinityrnaseq-Trinity-v2.4.0/Trinity"
cdHit="$depDir/cd-hit-v4.6.7-2017-0501/cd-hit-est"
bowtieBuild="$depDir/bowtie2-2.3.2/bowtie2-build"
bowtie2="$depDir/bowtie2-2.3.2/bowtie2"
samtools="$depDir/samtools-1.4.1/samtools"
makeblastdb="$depDir/ncbi-blast-2.2.28+/bin/makeblastdb"
blastn="$depDir/ncbi-blast-2.2.28+/bin/blastn"
KmerFilter=""

## databases
classificationDB="$reperDir/databases/REDat/mipsREdat_9.3p_ALL.upperCase.fasta"
chloroDB="$reperDir/databases/"
mitoDB="$reperDir/databases/"


## step specific options 
# Jellyfish
KMERSIZE=31
JELLYOUT='reads.jf'
# Kmer Filter
CUTOFF=$(($COVERAGE*5))
FILTEROUT='reads.filtered'
# Trinity
TRINITYOUT='Trinity.fasta'
# cd-hit
#alignment parameters are set in run_cd-hit.sh
CLUSTEROUT=$TRINITYOUT".exemplars"
# classifier
CLASSIFYOUT=$CLUSTEROUT".classified"
# quantify
QUANTOUT='alignments-sorted.bam'
# filtering
# CHLO='/shelf/genomics/projects/dmuscipula/chloroplast/chloro_gene_database/eudicot/all_CDS.fa'  #general sequences as default - change for species specific data
# MITO='/storage/genomics/projects/dmuscipula/mitochondrion/references/genomes/streptophyta_mitoDB.fasta'
FILCHLOOUT=$CLUSTEROUT"_vs_chloro.bls"
FILMITOOUT=$CLUSTEROUT"_vs_mito.bls"



maxMemoryKB=$(echo "$MAXMEMORY" | \
			   perl -e ' \
($num,$suf)=$_=~/(\d+)(K|M|G|T)?/; \
if(4$suf eq "T"){$res=$num*1000000000} \
elsif($suf eq "G"){$res=$num*1000000} \
elsif($suf eq "M"){$res=$num*1000} \
elsif($suf eq "K"){$res=$suf}\
else{die "ERROR: could not confert the memory limit to KB\nPlease make sure it is a format like 5M or 10G"} \
print "$res"
')




## Thomas' perl libs (some?) needed for kmer-filter
PERL5LIB=/storage/genomics/scripts/modules/perl/Verbose/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Kmer/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Jellyfish/arc/Jellyfish/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Jellyfish/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Fasta/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Fastq/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Phrap/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Blat/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/SeqStore/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Gmap/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Ace/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Usearch/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Cfg/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Bowtie2/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Bowtie/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Sam/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/Shrimp/lib/:$PERL5LIB;
PERL5LIB=/storage/genomics/scripts/modules/perl/PipeWrap/lib/:$PERL5LIB;
export PERL5LIB
