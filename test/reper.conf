#!/bin/bash


## input
READS1='testdata-1.fq'
READS2='testdata-2.fq'
COVERAGE='6'
READLENGTH=100  #average read length - used for calculating genomic part of repeats in last step

## performance options
MAXTHREADS=2
MAXMEMORY='12G'

cleanUp="yes"  #change to "yes" to remove intermediate files after reper finished

## reper installation directories
reperDir="/reper"
scrDir="$reperDir/scripts"
depDir="/dependencies"
dbDir="./databases"

## paths to executables
jellyfish=/usr/local/bin/jellyfish
trinity=/dependencies/trinityrnaseq-Trinity-v2.4.0/Trinity
cdHit=/usr/local/bin/cd-hit-est
bowtieBuild=/dependencies/bowtie2-2.3.2/bowtie2-build
bowtie2=/dependencies/bowtie2-2.3.2/bowtie2
samtools=/usr/local/bin/samtools
makeblastdb=/dependencies/ncbi-blast-2.2.28+/bin/makeblastdb
blastn=/dependencies/ncbi-blast-2.2.28+/bin/blastn
KmerFilter=/dependencies/kmer-scripts/bin//kmer-filter

## databases
classificationDB="$dbDir/REdat/mipsREdat_9.3p_ALL.fasta"
chloroDB="$dbDir/refseq/refseq-chloro.fa"
mitoDB="$dbDir/refseq/refseq-mito.fa"


## step specific options
LOGFILE='reper.log'
# Jellyfish
KMERSIZE=31
JELLYOUT='reads.jf'
# Kmer Filter
CUTOFF=$(($COVERAGE*5))
FILTEROUT='reads.filtered'
# Trinity
TRINITYOUT='Trinity.fasta'
# cd-hit
#alignment parameters are set in run_cd-hit.sh
CLUSTEROUT=$TRINITYOUT".exemplars"
# classifier
CLASSIFYOUT=$CLUSTEROUT".classified"
# quantify
QUANTOUT='alignments-sorted.bam'



maxMemoryKB=$(echo "$MAXMEMORY" | perl -ne '($num,$suf)=$_=~/(\d+)(K|M|G|T)?/; if($suf eq "T"){$res=$num*1024*1024*1024}elsif($suf eq "G"){$res=$num*1024*1024}elsif($suf eq "M"){$res=$num*1024}elsif($suf eq "K"){$res=$num}else{die "ERROR: could not confert the memory limit to KB\nPlease make sure it is a format like 5M or 10G"} print "$res"')

